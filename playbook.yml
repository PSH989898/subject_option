---
- name: Build and Push Docker image on Master
  hosts: master
  vars:
    docker_env_file: /home/user1/login.env
    docker_image: pshhhhh98/subject:jenkin
    docker_build_dir: /root/jen
    kubernetes_deploy_name: jenjenpod
    kubernetes_service_name: jenjenpod-svc
  tasks:
    - name: Load Docker credentials from .env file
      include_vars:
        file: "{{ docker_env_file }}"
        name: docker_credentials
        # 예: login.env 파일에 DOCKER_USERNAME과 DOCKER_PASSWORD가 정의되어 있어야 함

    - name: Log in to Docker Hub
      docker_login:
        username: "{{ docker_credentials.DOCKER_USERNAME }}"
        password: "{{ docker_credentials.DOCKER_PASSWORD }}"
        registry: https://index.docker.io/v1/
      no_log: true

    - name: Build Docker image
      docker_image:
        path: "{{ docker_build_dir }}"
        name: "{{ docker_image }}"
        tag: latest
        state: present

    - name: Push Docker image to Docker Hub
      docker_image:
        name: "{{ docker_image }}"
        tag: latest
        push: yes

    - name: Deploy to Kubernetes
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ kubernetes_deploy_name }}"
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: "{{ kubernetes_deploy_name }}"
            template:
              metadata:
                labels:
                  app: "{{ kubernetes_deploy_name }}"
              spec:
                containers:
                - name: "{{ kubernetes_deploy_name }}"
                  image: "{{ docker_image }}"
                  ports:
                  - containerPort: 80

    - name: Expose Service on Kubernetes
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ kubernetes_service_name }}"
          spec:
            type: LoadBalancer
            ports:
              - port: 80
                targetPort: 80
            selector:
              app: "{{ kubernetes_deploy_name }}"
